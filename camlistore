## install via go get:
go get camlistore.org/cmd/...
go get camlistore.org/server/camlidstored/...
go get camlistore.org/dev/...


####### setting up:
# install go 1.7:
http://tecadmin.net/install-go-on-ubuntu/
cd /tmp && wget https://storage.googleapis.com/golang/go1.7.linux-amd64.tar.gz
sudo tar -xvf go1.7.linux-amd64.tar.gz
sudo mv go /usr/local/
sudo ln -s /usr/local/go/bin/go /usr/local/bin/go

## add to ~/.bashrc
export GOROOT=/usr/local/go
export GOPATH=~/go
export PATH=$GOPATH/bin:$PATH

# get source / build
mkdir -p ~/go/src && \
  git clone https://camlistore.googlesource.com/camlistore

cd ~/go/src/camlistore && \
  go run make.go

# set up s3 bucket / user with appropriate permissions

# add api key/secret to ~/.config/camlistore/server-config.json

# set up mysql database:
sudo apt install mysql-server

# db setup
echo "create user 'camlistore'@'localhost' identified by 'PASSWORD'" | mysql -u root -p
echo "grant all privileges on *.* to 'camlistore'@'localhost'" | mysql -u root -p

bin/camtool dbinit -user camlistore -password PASSWORD -dbname camlistore

### for cloudformation template
. autoscaling group with userdata that runs ansible &/or installs snap version
. s3 bucket
. instance profile with permissions to write to bucket
. alb with certificate support
	-- configured with proper healthcheck


setting up multiple servers in client:
<SNIP>
  "servers": {
    "localhost": {
      "server": "http://localhost:3179",
      "auth": "userpass:USER:PASS:+localhost",
      "default": true
    },
    "camlistore-aws": {
      "server": "https://REMOTE_SITE",
      "auth": "userpass:USER:PASS",
      "default": false
    }
<SNIP>

# to sync the two:
./camtool sync --src camlistore-aws --dest localhost

###############
### example -- creating a folder and putting some pictures in it:
###############

# create a "folder" (really just a permanode) for my photos:
folder_permanode=$(camput permanode)

# add some attributes to it:
# 'title', so it has a title:
camput attr $folder_permanode title "2015 Vacation"

# set camliRoot attr on i, so it shows up as a folder and can be accessed as such via various interfaces (eg, fuse filesystem):
camput attr $folder_permanode camliRoot "2015 Vacation"

# create a permanode for some pics, upload them, and associate them with permanodes:
find . -name '*jpg' -exec basename '{}' \; | \
  while read my_pic;
  do 
    pic_permanode=$(camput permanode) && \
    camput attr --add $pic_permanode title "$my_pic" && \
    new_pic=$(camput file "$my_pic") && \
    camput attr --add "$pic_permanode" camliContent "$new_pic" && \
    camput attr --add $folder_permanode "camliPath:$my_pic" "$pic_permanode"
  done
##################################


my_pic=20150923_044037.jpg
folder_permanode=$(camput permanode)
camput attr $folder_permanode title "2015 Vacation"
camput attr $folder_permanode camliRoot "2015 Vacation"
pic_permanode=$(camput permanode)
camput attr --add $pic_permanode title $my_pic
new_pic=$(camput file $my_pic)
camput attr --add "$pic_permanode" camliContent "$new_pic"
camput attr --add $folder_permanode "camliPath:$my_pic" "$pic_permanode"


#### 
. 45 displayed pics in '2015-vacation'
. 2 permanodes with no photos assoc'd:
 -- 20150912_093901.jpg
 -- 20150925_134502.jpg
. __lots__ more photos associated with album permanode, though


### why is sync throwing this error, when both clearly are using
### same gpg key?
Failed to discover keyId for server aws: Get http://camlistore.jamesntina.com:3179: dial tcp 52.22.191.215:3179: getsockopt: connection timed outWARNING: the source server GPG key ID (3DBEA36499A86445) and the destination's () differ. All blobs will be synced, but because the indexer at the other side is indexing claims by a different user, you may not see what you expect in that server's web UI, etc.
