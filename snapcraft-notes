# snap systemd service creation:
snapd/wrappers/services.go

# snapcraft command wrapper generation:
snapcraft/snapcraft/internal/meta.py 

# snapcraft schema:
snapcraft/schema/snapcraft.yaml

# snapd doesn't autoconnect network-observe plugin -- this is how you do it:
snap connect savi:network-observe ubuntu-core:network-observe

# pluginhandler
. this code primarily called by snapcraft/internal/parts.py

# local plugins
. code for this in PluginHandler._load_code

snapcraft/main.py
. main builds options using docopt, passes to run
. run:
 - parse args

############################
import snapcraft


import inspect
# list class methods:
inspect.getmembers(snapcraft.BasePlugin)

# list instance methods:
a = snapcraft.BasePlugin('barf', {})
for i in inspect.getmembers(a, predicate=inspect.ismethod): print(i)

import types
def functions(cls):
    return [x for x, y in cls.__dict__.items() if type(y) == types.FunctionType]

# no worko:
def methods(cls):
    return [x for x, y in cls.__dict__.items() if type(y) == types.MethodType]
##################
